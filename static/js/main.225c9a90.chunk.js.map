{"version":3,"sources":["utils.re","index.re","app.re","game.re","double_click.re","logo.svg"],"names":["Belt_List","__webpack_require__","shuffle","exports","List","str","prim","arr","range","start","end_","cartesian","l1","l2","flatten","map","e","e$prime","take","n","lst","match","undefined","App","ReactDOMRe","ReasonReact","renderToElementWithId","element","make","Game","Block","Curry","Utils","React","LogoSvg","component","reducerComponent","message","_children","param","contents","send","state","createElement","className","title","type","onClick","_1","href","alt","src","target","action","_state","__","Cn","Belt_Id","Belt_Map","Belt_Set","Pervasives","Double_click","Caml_primitive","FieldsComparator","MakeComparable","param$1","c","caml_int_compare","empty","FieldsMap","empty$1","FieldsSet","input","mergeMany","toArray","__x","neighbourDiff","keep","fieldNeighboursSelector","field","y","x","height","width","adjacentMinesCountSelector","__x$1","neighbour","getExn","length","minesCountSelector","size","markedCountSelector","revealedCountSelector","remainingMinesCountSelector","gameStatusSelector","fields","exploded","some","fieldState","safeRemaining","add2","set","initializeState","mines","xs","ys","failwith","minedFields","has","reduce","reinitializeStateWithSafeField","safeField","_param","accumulateFieldsToReveal","acc","accWithFieldRevealed","add","fieldsToReveal","revealFields","toReveal","mapWithKey","reducer","tag","state$1","neighbours","partition","mines$1","toReveal$1","union","fields$1","field$1","newFieldState","fieldState$1","fields$2","statelessComponentWithRetainedProps","onDoubleClick","_self","buttonContent","String","revealedClassName","minesClassName","explosionClassName","_evt","_event","Field","component$1","$$Map","$$Set","fieldStateSelector","isPlaying","buttonContents","gameStatus","rows","key","displayedFieldState","remainingMines","Js_primitive","thresholdMs","onSingleClick","children","evt","preventDefault","now","Date","isDoubleClick","clearTimeout","valFromOption","persist","timeoutId","setTimeout","_action","module","p"],"mappings":"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","file":"static/js/main.225c9a90.chunk.js","sourcesContent":["// Generated by BUCKLESCRIPT VERSION 4.0.7, PLEASE EDIT WITH CARE\n'use strict';\n\nvar Belt_List = require(\"bs-platform/lib/js/belt_List.js\");\n\nfunction str(prim) {\n  return prim;\n}\n\nfunction arr(prim) {\n  return prim;\n}\n\nfunction range(start, end_) {\n  if (start >= end_) {\n    return /* [] */0;\n  } else {\n    return /* :: */[\n            start,\n            range(start + 1 | 0, end_)\n          ];\n  }\n}\n\nfunction cartesian(l1, l2) {\n  return Belt_List.flatten(Belt_List.map(l1, (function (e) {\n                    return Belt_List.map(l2, (function (e$prime) {\n                                  return /* tuple */[\n                                          e,\n                                          e$prime\n                                        ];\n                                }));\n                  })));\n}\n\nfunction take(n, lst) {\n  var match = Belt_List.take(lst, n);\n  if (match !== undefined) {\n    return match;\n  } else {\n    return lst;\n  }\n}\n\nvar List = 0;\n\nvar shuffle = Belt_List.shuffle;\n\nexports.List = List;\nexports.str = str;\nexports.arr = arr;\nexports.range = range;\nexports.cartesian = cartesian;\nexports.shuffle = shuffle;\nexports.take = take;\n/* No side effect */\n","// Generated by BUCKLESCRIPT VERSION 4.0.7, PLEASE EDIT WITH CARE\n'use strict';\n\nvar App = require(\"./app\");\nvar ReactDOMRe = require(\"reason-react/src/ReactDOMRe.js\");\nvar ReasonReact = require(\"reason-react/src/ReasonReact.js\");\n\n((require('./index.css')));\n\nReactDOMRe.renderToElementWithId(ReasonReact.element(undefined, undefined, App.make(\"Minesweeper in ReasonML & React\", /* array */[])), \"root\");\n\n/*  Not a pure module */\n","// Generated by BUCKLESCRIPT VERSION 4.0.7, PLEASE EDIT WITH CARE\n'use strict';\n\nvar Game = require(\"./game\");\nvar Block = require(\"bs-platform/lib/js/block.js\");\nvar Curry = require(\"bs-platform/lib/js/curry.js\");\nvar Utils = require(\"./utils\");\nvar React = require(\"react\");\nvar LogoSvg = require(\"./logo.svg\");\nvar ReasonReact = require(\"reason-react/src/ReasonReact.js\");\n\n((require('./app.css')));\n\nvar component = ReasonReact.reducerComponent(\"App\");\n\nfunction make(message, _children) {\n  return /* record */[\n          /* debugName */component[/* debugName */0],\n          /* reactClassInternal */component[/* reactClassInternal */1],\n          /* handedOffState */component[/* handedOffState */2],\n          /* willReceiveProps */component[/* willReceiveProps */3],\n          /* didMount */component[/* didMount */4],\n          /* didUpdate */component[/* didUpdate */5],\n          /* willUnmount */component[/* willUnmount */6],\n          /* willUpdate */component[/* willUpdate */7],\n          /* shouldUpdate */component[/* shouldUpdate */8],\n          /* render */(function (param) {\n              var send = param[/* send */3];\n              var state = param[/* state */1];\n              var contents;\n              if (state !== undefined) {\n                var match;\n                switch (state) {\n                  case 0 : \n                      match = /* tuple */[\n                        9,\n                        9,\n                        10\n                      ];\n                      break;\n                  case 1 : \n                      match = /* tuple */[\n                        16,\n                        16,\n                        40\n                      ];\n                      break;\n                  case 2 : \n                      match = /* tuple */[\n                        30,\n                        16,\n                        99\n                      ];\n                      break;\n                  \n                }\n                contents = ReasonReact.element(undefined, undefined, Game.make(match[0], match[1], match[2], /* array */[]));\n              } else {\n                contents = React.createElement(\"div\", {\n                      className: \"difficulties__wrapper\"\n                    }, React.createElement(\"h3\", undefined, Utils.str(\"Choose difficulty\")), React.createElement(\"div\", {\n                          className: \"difficulties\"\n                        }, React.createElement(\"button\", {\n                              className: \"difficulty\",\n                              title: \"Easy\",\n                              type: \"button\",\n                              onClick: (function (param) {\n                                  return Curry._1(send, /* ChooseDifficulty */[/* Easy */0]);\n                                })\n                            }, Utils.str(\"😌\")), React.createElement(\"button\", {\n                              className: \"difficulty\",\n                              title: \"Normal\",\n                              type: \"button\",\n                              onClick: (function (param) {\n                                  return Curry._1(send, /* ChooseDifficulty */[/* Normal */1]);\n                                })\n                            }, Utils.str(\"😐\")), React.createElement(\"button\", {\n                              className: \"difficulty\",\n                              title: \"Hard\",\n                              type: \"button\",\n                              onClick: (function (param) {\n                                  return Curry._1(send, /* ChooseDifficulty */[/* Hard */2]);\n                                })\n                            }, Utils.str(\"😱\"))));\n              }\n              return React.createElement(\"div\", {\n                          className: \"app\"\n                        }, React.createElement(\"div\", {\n                              className: \"app__header\"\n                            }, React.createElement(\"a\", {\n                                  href: \"\"\n                                }, React.createElement(\"img\", {\n                                      className: \"app__logo\",\n                                      alt: \"logo\",\n                                      src: LogoSvg\n                                    })), React.createElement(\"h2\", undefined, Utils.str(message)), React.createElement(\"p\", {\n                                  className: \"app__credits\"\n                                }, Utils.str(\"by \"), React.createElement(\"a\", {\n                                      href: \"http://pewniak747.info\",\n                                      target: \"_blank\"\n                                    }, Utils.str(\"Tomasz Pewiński\")), Utils.str(\" · \"), React.createElement(\"a\", {\n                                      href: \"https://github.com/pewniak747/minesweeper-reasonml\",\n                                      target: \"_blank\"\n                                    }, Utils.str(\"source\")))), React.createElement(\"div\", {\n                              className: \"app__intro\"\n                            }, contents));\n            }),\n          /* initialState */(function (param) {\n              return undefined;\n            }),\n          /* retainedProps */component[/* retainedProps */11],\n          /* reducer */(function (action, _state) {\n              return /* Update */Block.__(0, [action[0]]);\n            }),\n          /* jsElementWrapped */component[/* jsElementWrapped */13]\n        ];\n}\n\nexports.component = component;\nexports.make = make;\n/*  Not a pure module */\n","// Generated by BUCKLESCRIPT VERSION 4.0.7, PLEASE EDIT WITH CARE\n'use strict';\n\nvar Cn = require(\"re-classnames/src/Cn.bs.js\");\nvar Block = require(\"bs-platform/lib/js/block.js\");\nvar Curry = require(\"bs-platform/lib/js/curry.js\");\nvar Utils = require(\"./utils\");\nvar React = require(\"react\");\nvar Belt_Id = require(\"bs-platform/lib/js/belt_Id.js\");\nvar Belt_Map = require(\"bs-platform/lib/js/belt_Map.js\");\nvar Belt_Set = require(\"bs-platform/lib/js/belt_Set.js\");\nvar Belt_List = require(\"bs-platform/lib/js/belt_List.js\");\nvar Pervasives = require(\"bs-platform/lib/js/pervasives.js\");\nvar ReasonReact = require(\"reason-react/src/ReasonReact.js\");\nvar Double_click = require(\"./double_click\");\nvar Caml_primitive = require(\"bs-platform/lib/js/caml_primitive.js\");\n\nfunction cmp(param, param$1) {\n  var c = Caml_primitive.caml_int_compare(param[0], param$1[0]);\n  if (c !== 0) {\n    return c;\n  } else {\n    return Caml_primitive.caml_int_compare(param[1], param$1[1]);\n  }\n}\n\nvar FieldsComparator = Belt_Id.MakeComparable(/* module */[/* cmp */cmp]);\n\nvar empty = Belt_Map.make(FieldsComparator);\n\nvar FieldsMap = /* module */[/* empty */empty];\n\nvar empty$1 = Belt_Set.make(FieldsComparator);\n\nfunction fromList(input) {\n  return Belt_Set.mergeMany(empty$1, Belt_List.toArray(input));\n}\n\nvar FieldsSet = /* module */[\n  /* empty */empty$1,\n  /* fromList */fromList\n];\n\nvar __x = Utils.cartesian(/* :: */[\n      -1,\n      /* :: */[\n        0,\n        /* :: */[\n          1,\n          /* [] */0\n        ]\n      ]\n    ], /* :: */[\n      -1,\n      /* :: */[\n        0,\n        /* :: */[\n          1,\n          /* [] */0\n        ]\n      ]\n    ]);\n\nvar neighbourDiff = Belt_List.keep(__x, (function (param) {\n        if (param[0] !== 0) {\n          return true;\n        } else {\n          return param[1] !== 0;\n        }\n      }));\n\nif (Belt_List.length(neighbourDiff) !== 8) {\n  Pervasives.failwith(\"nighbourDiff should contain exactly 8 items\");\n}\n\nfunction fieldNeighboursSelector(state, field) {\n  var y = field[1];\n  var x = field[0];\n  var height = state[/* height */1];\n  var width = state[/* width */0];\n  var __x = Belt_List.map(neighbourDiff, (function (param) {\n          return /* tuple */[\n                  x + param[0] | 0,\n                  y + param[1] | 0\n                ];\n        }));\n  return Belt_List.keep(__x, (function (param) {\n                var y = param[1];\n                var x = param[0];\n                if (x >= 0 && x < width && y >= 0) {\n                  return y < height;\n                } else {\n                  return false;\n                }\n              }));\n}\n\nfunction fieldStateSelector(state, field) {\n  return Belt_Map.getExn(state[/* fields */2], field);\n}\n\nfunction adjacentMinesCountSelector(state, field) {\n  var __x = fieldNeighboursSelector(state, field);\n  var __x$1 = Belt_List.map(__x, (function (neighbour) {\n          return Belt_Map.getExn(state[/* fields */2], neighbour);\n        }));\n  return Belt_List.length(Belt_List.keep(__x$1, (function (param) {\n                    return param[0] === /* Mine */0;\n                  })));\n}\n\nfunction minesCountSelector(state) {\n  var __x = state[/* fields */2];\n  return Belt_Map.size(Belt_Map.keep(__x, (function (param, param$1) {\n                    return param$1[0] === /* Mine */0;\n                  })));\n}\n\nfunction markedCountSelector(state) {\n  var __x = state[/* fields */2];\n  return Belt_Map.size(Belt_Map.keep(__x, (function (param, param$1) {\n                    return param$1[1] === /* Marked */2;\n                  })));\n}\n\nfunction revealedCountSelector(state) {\n  var __x = state[/* fields */2];\n  return Belt_Map.size(Belt_Map.keep(__x, (function (param, param$1) {\n                    return param$1[1] === /* Revealed */1;\n                  })));\n}\n\nfunction remainingMinesCountSelector(state) {\n  var mines = minesCountSelector(state);\n  var marked = markedCountSelector(state);\n  return mines - marked | 0;\n}\n\nfunction gameStatusSelector(state) {\n  var fields = state[/* fields */2];\n  var exploded = Belt_Map.some(fields, (function (param, fieldState) {\n          if (fieldState[0]) {\n            return false;\n          } else {\n            return fieldState[1] === 1;\n          }\n        }));\n  var safeRemaining = Belt_Map.some(fields, (function (param, fieldState) {\n          if (fieldState[0]) {\n            return fieldState[1] === 0;\n          } else {\n            return false;\n          }\n        }));\n  if (exploded) {\n    return /* Lost */2;\n  } else if (safeRemaining) {\n    return /* Playing */0;\n  } else {\n    return /* Won */1;\n  }\n}\n\nfunction add2(map, param) {\n  return Belt_Map.set(map, param[0], param[1]);\n}\n\nfunction initializeState(width, height, mines, param) {\n  var xs = Utils.range(0, width);\n  var ys = Utils.range(0, height);\n  var fields = Utils.cartesian(xs, ys);\n  if (Belt_List.length(fields) <= mines) {\n    Pervasives.failwith(\"Too many mines for the board\");\n  }\n  var input = Utils.take(mines, Utils.shuffle(fields));\n  var minedFields = Belt_Set.mergeMany(empty$1, Belt_List.toArray(input));\n  var makeFieldWithState = function (field) {\n    var match = Belt_Set.has(minedFields, field);\n    var contents = match ? /* Mine */0 : /* Safe */1;\n    var fieldState = /* tuple */[\n      contents,\n      /* Hidden */0\n    ];\n    return /* tuple */[\n            field,\n            fieldState\n          ];\n  };\n  var __x = Belt_List.map(fields, makeFieldWithState);\n  var fieldsWithState = Belt_List.reduce(__x, empty, add2);\n  return /* record */[\n          /* width */width,\n          /* height */height,\n          /* fields */fieldsWithState\n        ];\n}\n\nfunction reinitializeStateWithSafeField(_state, width, height, mines, safeField, _param) {\n  while(true) {\n    var state = _state;\n    var match = Belt_Map.getExn(state[/* fields */2], safeField);\n    if (match[0]) {\n      return state;\n    } else {\n      var newState = initializeState(width, height, mines, /* () */0);\n      _param = /* () */0;\n      _state = newState;\n      continue ;\n    }\n  };\n}\n\nfunction accumulateFieldsToReveal(state, field, acc) {\n  var match = Belt_Map.getExn(state[/* fields */2], field);\n  var mines = adjacentMinesCountSelector(state, field);\n  var accWithFieldRevealed = Belt_Set.add(acc, field);\n  if (mines !== 0 || !match[0]) {\n    return accWithFieldRevealed;\n  } else {\n    var visitNeighbour = function (acc, neighbour) {\n      var match = Belt_Set.has(acc, neighbour);\n      if (match) {\n        return acc;\n      } else {\n        return accumulateFieldsToReveal(state, neighbour, acc);\n      }\n    };\n    var __x = fieldNeighboursSelector(state, field);\n    return Belt_List.reduce(__x, accWithFieldRevealed, visitNeighbour);\n  }\n}\n\nfunction fieldsToReveal(state, field) {\n  return accumulateFieldsToReveal(state, field, empty$1);\n}\n\nfunction revealFields(state, toReveal) {\n  return Belt_Map.mapWithKey(state[/* fields */2], (function (field, fieldState) {\n                var shouldReveal = Belt_Set.has(toReveal, field);\n                if (shouldReveal) {\n                  return /* tuple */[\n                          fieldState[0],\n                          /* Revealed */1\n                        ];\n                } else {\n                  return fieldState;\n                }\n              }));\n}\n\nfunction isPlaying(state) {\n  return gameStatusSelector(state) === /* Playing */0;\n}\n\nfunction reducer(action, state) {\n  switch (action.tag | 0) {\n    case 0 : \n        return /* Update */Block.__(0, [action[0]]);\n    case 1 : \n        var field = action[0];\n        if (gameStatusSelector(state) === /* Playing */0) {\n          var firstReveal = revealedCountSelector(state) === 0;\n          var state$1;\n          if (firstReveal) {\n            var mines = minesCountSelector(state);\n            state$1 = reinitializeStateWithSafeField(state, state[/* width */0], state[/* height */1], mines, field, /* () */0);\n          } else {\n            state$1 = state;\n          }\n          var fieldState = Belt_Map.getExn(state$1[/* fields */2], field);\n          if (fieldState[1] !== 1) {\n            var toReveal = fieldsToReveal(state$1, field);\n            var fields = revealFields(state$1, toReveal);\n            return /* Update */Block.__(0, [/* record */[\n                        /* width */state$1[/* width */0],\n                        /* height */state$1[/* height */1],\n                        /* fields */fields\n                      ]]);\n          } else {\n            var neighbours = fieldNeighboursSelector(state$1, field);\n            var match = Belt_List.partition(neighbours, (function (neighbour) {\n                    var match = Belt_Map.getExn(state$1[/* fields */2], neighbour);\n                    return match[1] >= 2;\n                  }));\n            var mines$1 = adjacentMinesCountSelector(state$1, field);\n            if (Belt_List.length(match[0]) === mines$1) {\n              var __x = Belt_List.map(match[1], (function (param) {\n                      return fieldsToReveal(state$1, param);\n                    }));\n              var toReveal$1 = Belt_List.reduce(__x, empty$1, Belt_Set.union);\n              var fields$1 = revealFields(state$1, toReveal$1);\n              return /* Update */Block.__(0, [/* record */[\n                          /* width */state$1[/* width */0],\n                          /* height */state$1[/* height */1],\n                          /* fields */fields$1\n                        ]]);\n            } else {\n              return /* NoUpdate */0;\n            }\n          }\n        } else {\n          return /* NoUpdate */0;\n        }\n    case 2 : \n        var field$1 = action[0];\n        if (gameStatusSelector(state) === /* Playing */0) {\n          var fieldState$1 = Belt_Map.getExn(state[/* fields */2], field$1);\n          var contents = fieldState$1[0];\n          var newFieldState;\n          switch (fieldState$1[1]) {\n            case 0 : \n                newFieldState = /* tuple */[\n                  contents,\n                  /* Marked */2\n                ];\n                break;\n            case 1 : \n                newFieldState = undefined;\n                break;\n            case 2 : \n                newFieldState = /* tuple */[\n                  contents,\n                  /* Hidden */0\n                ];\n                break;\n            \n          }\n          if (newFieldState !== undefined) {\n            var fields$2 = Belt_Map.set(state[/* fields */2], field$1, newFieldState);\n            return /* Update */Block.__(0, [/* record */[\n                        /* width */state[/* width */0],\n                        /* height */state[/* height */1],\n                        /* fields */fields$2\n                      ]]);\n          } else {\n            return /* NoUpdate */0;\n          }\n        } else {\n          return /* NoUpdate */0;\n        }\n    \n  }\n}\n\nvar component = ReasonReact.statelessComponentWithRetainedProps(\"Field\");\n\nfunction make(mines, field, fieldState, onClick, onDoubleClick, _children) {\n  return /* record */[\n          /* debugName */component[/* debugName */0],\n          /* reactClassInternal */component[/* reactClassInternal */1],\n          /* handedOffState */component[/* handedOffState */2],\n          /* willReceiveProps */component[/* willReceiveProps */3],\n          /* didMount */component[/* didMount */4],\n          /* didUpdate */component[/* didUpdate */5],\n          /* willUnmount */component[/* willUnmount */6],\n          /* willUpdate */component[/* willUpdate */7],\n          /* shouldUpdate */(function (param) {\n              return param[/* oldSelf */0][/* retainedProps */2][/* fieldState */0] !== param[/* newSelf */1][/* retainedProps */2][/* fieldState */0];\n            }),\n          /* render */(function (_self) {\n              var buttonContent;\n              switch (fieldState[1]) {\n                case 0 : \n                    buttonContent = \"\";\n                    break;\n                case 1 : \n                    buttonContent = fieldState[0] ? String(mines) : \"💥\";\n                    break;\n                case 2 : \n                    buttonContent = \"🚩\";\n                    break;\n                \n              }\n              var baseClassName = \"game__board-field\";\n              var revealedClassName = fieldState[1] !== 1 ? \"\" : \"\" + (String(baseClassName) + \"--revealed\");\n              var minesClassName = fieldState[0] && fieldState[1] === 1 ? \"\" + (String(baseClassName) + (\"--\" + (String(mines) + \"\"))) : \"\";\n              var explosionClassName = fieldState[0] || fieldState[1] !== 1 ? \"\" : \"\" + (String(baseClassName) + \"--exploded\");\n              var className = Cn.make(/* :: */[\n                    baseClassName,\n                    /* :: */[\n                      revealedClassName,\n                      /* :: */[\n                        minesClassName,\n                        /* :: */[\n                          explosionClassName,\n                          /* [] */0\n                        ]\n                      ]\n                    ]\n                  ]);\n              var onClick$1 = function (_evt) {\n                return Curry._1(onClick, field);\n              };\n              var onDoubleClick$1 = function (_event) {\n                return Curry._1(onDoubleClick, field);\n              };\n              return ReasonReact.element(undefined, undefined, Double_click.make(onClick$1, onDoubleClick$1, React.createElement(\"div\", {\n                                  className: className\n                                }, React.createElement(\"button\", {\n                                      type: \"button\"\n                                    }, Utils.str(buttonContent)))));\n            }),\n          /* initialState */component[/* initialState */10],\n          /* retainedProps : record */[/* fieldState */fieldState],\n          /* reducer */component[/* reducer */12],\n          /* jsElementWrapped */component[/* jsElementWrapped */13]\n        ];\n}\n\nvar Field = /* module */[\n  /* component */component,\n  /* make */make\n];\n\nvar component$1 = ReasonReact.reducerComponent(\"Game\");\n\nfunction make$1(width, height, mines, _children) {\n  return /* record */[\n          /* debugName */component$1[/* debugName */0],\n          /* reactClassInternal */component$1[/* reactClassInternal */1],\n          /* handedOffState */component$1[/* handedOffState */2],\n          /* willReceiveProps */component$1[/* willReceiveProps */3],\n          /* didMount */component$1[/* didMount */4],\n          /* didUpdate */component$1[/* didUpdate */5],\n          /* willUnmount */component$1[/* willUnmount */6],\n          /* willUpdate */component$1[/* willUpdate */7],\n          /* shouldUpdate */component$1[/* shouldUpdate */8],\n          /* render */(function (param) {\n              var send = param[/* send */3];\n              var state = param[/* state */1];\n              var xs = Utils.range(0, state[/* width */0]);\n              var ys = Utils.range(0, state[/* height */1]);\n              var gameStatus = gameStatusSelector(state);\n              var rows = Utils.arr(Belt_List.toArray(Belt_List.map(ys, (function (y) {\n                              return React.createElement(\"div\", {\n                                          key: String(y),\n                                          className: \"game__board-row\"\n                                        }, Utils.arr(Belt_List.toArray(Belt_List.map(xs, (function (x) {\n                                                        var field = /* tuple */[\n                                                          x,\n                                                          y\n                                                        ];\n                                                        var fieldState = Belt_Map.getExn(state[/* fields */2], field);\n                                                        var displayedFieldState = gameStatus !== 1 || fieldState[0] ? fieldState : /* tuple */[\n                                                            /* Mine */0,\n                                                            /* Marked */2\n                                                          ];\n                                                        var onClick = function (field) {\n                                                          return Curry._1(send, /* ToggleMarker */Block.__(2, [field]));\n                                                        };\n                                                        var onDoubleClick = function (field) {\n                                                          return Curry._1(send, /* Reveal */Block.__(1, [field]));\n                                                        };\n                                                        var mines = adjacentMinesCountSelector(state, field);\n                                                        return ReasonReact.element(String(x), undefined, make(mines, field, displayedFieldState, onClick, onDoubleClick, /* array */[]));\n                                                      })))));\n                            }))));\n              var buttonContents;\n              switch (gameStatus) {\n                case 0 : \n                    buttonContents = \"🙂\";\n                    break;\n                case 1 : \n                    buttonContents = \"😎\";\n                    break;\n                case 2 : \n                    buttonContents = \"😵\";\n                    break;\n                \n              }\n              var startButtonClick = function (_evt) {\n                return Curry._1(send, /* Init */Block.__(0, [initializeState(state[/* width */0], state[/* height */1], mines, /* () */0)]));\n              };\n              var remainingMines = remainingMinesCountSelector(state);\n              return React.createElement(\"section\", {\n                          className: \"game__wrapper\"\n                        }, React.createElement(\"div\", {\n                              className: \"game\"\n                            }, React.createElement(\"div\", {\n                                  className: \"game__header\"\n                                }, React.createElement(\"div\", {\n                                      className: \"game__remaining-mines\"\n                                    }, Utils.str(String(remainingMines))), React.createElement(\"button\", {\n                                      className: \"game__start-button\",\n                                      type: \"button\",\n                                      onClick: startButtonClick\n                                    }, Utils.str(buttonContents))), React.createElement(\"div\", {\n                                  className: \"game__board\"\n                                }, rows)), React.createElement(\"p\", {\n                              className: \"instructions\"\n                            }, Utils.str(\"double-click to reveal a field / click to mark a field\")));\n            }),\n          /* initialState */(function (param) {\n              return initializeState(width, height, mines, param);\n            }),\n          /* retainedProps */component$1[/* retainedProps */11],\n          /* reducer */reducer,\n          /* jsElementWrapped */component$1[/* jsElementWrapped */13]\n        ];\n}\n\nvar List = 0;\n\nvar $$Map = 0;\n\nvar $$Set = 0;\n\nexports.List = List;\nexports.$$Map = $$Map;\nexports.$$Set = $$Set;\nexports.FieldsComparator = FieldsComparator;\nexports.FieldsMap = FieldsMap;\nexports.FieldsSet = FieldsSet;\nexports.neighbourDiff = neighbourDiff;\nexports.fieldNeighboursSelector = fieldNeighboursSelector;\nexports.fieldStateSelector = fieldStateSelector;\nexports.adjacentMinesCountSelector = adjacentMinesCountSelector;\nexports.minesCountSelector = minesCountSelector;\nexports.markedCountSelector = markedCountSelector;\nexports.revealedCountSelector = revealedCountSelector;\nexports.remainingMinesCountSelector = remainingMinesCountSelector;\nexports.gameStatusSelector = gameStatusSelector;\nexports.add2 = add2;\nexports.initializeState = initializeState;\nexports.reinitializeStateWithSafeField = reinitializeStateWithSafeField;\nexports.accumulateFieldsToReveal = accumulateFieldsToReveal;\nexports.fieldsToReveal = fieldsToReveal;\nexports.revealFields = revealFields;\nexports.isPlaying = isPlaying;\nexports.reducer = reducer;\nexports.Field = Field;\nexports.component = component$1;\nexports.make = make$1;\n/* FieldsComparator Not a pure module */\n","// Generated by BUCKLESCRIPT VERSION 4.0.7, PLEASE EDIT WITH CARE\n'use strict';\n\nvar Curry = require(\"bs-platform/lib/js/curry.js\");\nvar React = require(\"react\");\nvar ReasonReact = require(\"reason-react/src/ReasonReact.js\");\nvar Js_primitive = require(\"bs-platform/lib/js/js_primitive.js\");\n\nvar component = ReasonReact.reducerComponent(\"DoubleClick\");\n\nfunction make(onSingleClick, onDoubleClick, children) {\n  return /* record */[\n          /* debugName */component[/* debugName */0],\n          /* reactClassInternal */component[/* reactClassInternal */1],\n          /* handedOffState */component[/* handedOffState */2],\n          /* willReceiveProps */component[/* willReceiveProps */3],\n          /* didMount */component[/* didMount */4],\n          /* didUpdate */component[/* didUpdate */5],\n          /* willUnmount */component[/* willUnmount */6],\n          /* willUpdate */component[/* willUpdate */7],\n          /* shouldUpdate */component[/* shouldUpdate */8],\n          /* render */(function (param) {\n              var state = param[/* state */1];\n              var onClick = function (evt) {\n                evt.preventDefault();\n                var now = Date.now();\n                var lastClickAt = state[/* lastClickAt */0][/* contents */0];\n                var isDoubleClick = lastClickAt + 200.0 > now;\n                state[/* lastClickAt */0][0] = now;\n                var match = state[/* timeoutId */1][/* contents */0];\n                if (match !== undefined) {\n                  clearTimeout(Js_primitive.valFromOption(match));\n                }\n                if (isDoubleClick) {\n                  return Curry._1(onDoubleClick, evt);\n                } else {\n                  evt.persist();\n                  var timeoutId = setTimeout((function (param) {\n                          return Curry._1(onSingleClick, evt);\n                        }), 200);\n                  state[/* timeoutId */1][0] = Js_primitive.some(timeoutId);\n                  return /* () */0;\n                }\n              };\n              return React.createElement(\"div\", {\n                          onClick: onClick\n                        }, children);\n            }),\n          /* initialState */(function (param) {\n              return /* record */[\n                      /* lastClickAt : record */[/* contents */0.0],\n                      /* timeoutId : record */[/* contents */undefined]\n                    ];\n            }),\n          /* retainedProps */component[/* retainedProps */11],\n          /* reducer */(function (_action, _state) {\n              return /* NoUpdate */0;\n            }),\n          /* jsElementWrapped */component[/* jsElementWrapped */13]\n        ];\n}\n\nvar thresholdMs = 200.0;\n\nexports.component = component;\nexports.thresholdMs = thresholdMs;\nexports.make = make;\n/* component Not a pure module */\n","module.exports = __webpack_public_path__ + \"static/media/logo.e2342b05.svg\";"],"sourceRoot":""}